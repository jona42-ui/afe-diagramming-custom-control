"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _classnames = _interopRequireDefault(require("classnames"));

var _FloatingMenu = _interopRequireDefault(require("../../globals/internal/FloatingMenu"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Tooltip =
/*#__PURE__*/
function (_Component) {
  _inherits(Tooltip, _Component);

  function Tooltip() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Tooltip);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tooltip)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      open: !_this.props.openOnHover && _this.props.open
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getTriggerPosition", function () {
      if (_this.triggerEl) {
        var triggerPosition = _this.triggerEl.getBoundingClientRect();

        _this.setState({
          triggerPosition: triggerPosition
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "toggleOpen", function (open) {
      var nextOpenState = typeof open === 'boolean' ? open : !_this.state.open;
      /* istanbul ignore next */

      if (nextOpenState) {
        _this.getTriggerPosition();

        _this.setState({
          open: true
        });
      } else {
        _this.setState({
          open: false
        });
      }
    });

    return _this;
  }

  _createClass(Tooltip, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      requestAnimationFrame(function () {
        /* istanbul ignore next */
        _this2.getTriggerPosition();
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          direction = _this$props.direction,
          triggerText = _this$props.triggerText,
          showIcon = _this$props.showIcon,
          iconName = _this$props.iconName,
          iconDescription = _this$props.iconDescription,
          menuOffset = _this$props.menuOffset,
          openOnHover = _this$props.openOnHover,
          rest = _objectWithoutProperties(_this$props, ["children", "className", "direction", "triggerText", "showIcon", "iconName", "iconDescription", "menuOffset", "openOnHover"]);

      var tooltipClasses = (0, _classnames.default)('bx--tooltip', {
        'bx--tooltip--shown': this.state.open
      }, className);
      var triggerProps = {
        onFocus: function onFocus() {
          return _this3.toggleOpen(true);
        },
        onBlur: function onBlur() {
          return _this3.toggleOpen(false);
        }
      };

      if (openOnHover) {
        triggerProps = {
          onMouseEnter: function onMouseEnter() {
            return _this3.toggleOpen(true);
          },
          onMouseLeave: function onMouseLeave() {
            return _this3.toggleOpen(false);
          }
        };
      }

      return _react.default.createElement("div", null, showIcon ? _react.default.createElement("div", {
        className: "bx--tooltip__trigger"
      }, triggerText, _react.default.createElement("div", _extends({
        ref: function ref(node) {
          _this3.triggerEl = node;
        },
        className: "bx--tooltip__icon-container",
        role: "button",
        tabIndex: "0"
      }, triggerProps), _react.default.createElement(_Icon.default, {
        name: iconName,
        description: iconDescription,
        className: "bx--tooltip__icon"
      }))) : _react.default.createElement("div", _extends({
        className: "bx--tooltip__trigger",
        ref: function ref(node) {
          _this3.triggerEl = node;
        },
        role: "button",
        tabIndex: "0"
      }, triggerProps), triggerText), _react.default.createElement(_FloatingMenu.default, {
        menuPosition: this.state.triggerPosition,
        menuDirection: direction,
        menuOffset: menuOffset
      }, _react.default.createElement("div", _extends({
        className: tooltipClasses
      }, rest, {
        "data-floating-menu-direction": direction
      }), children)));
    }
  }]);

  return Tooltip;
}(_react.Component);

exports.default = Tooltip;

_defineProperty(Tooltip, "propTypes", {
  open: _propTypes.default.bool,
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  direction: _propTypes.default.oneOf(['bottom', 'top', 'left', 'right']),
  menuOffset: _propTypes.default.object,
  triggerText: _propTypes.default.string,
  showIcon: _propTypes.default.bool,
  iconName: _propTypes.default.string,
  iconDescription: _propTypes.default.string,
  openOnHover: _propTypes.default.bool
});

_defineProperty(Tooltip, "defaultProps", {
  open: false,
  direction: 'bottom',
  showIcon: true,
  iconName: 'info',
  iconDescription: 'tooltip',
  triggerText: 'Provide triggerText',
  menuOffset: {},
  openOnHover: false
});