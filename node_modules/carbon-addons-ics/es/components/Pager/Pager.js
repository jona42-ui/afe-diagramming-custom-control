"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _classnames3 = _interopRequireDefault(require("classnames"));

var _index = require("../../index");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PagerListItem =
/*#__PURE__*/
function (_Component) {
  _inherits(PagerListItem, _Component);

  function PagerListItem() {
    _classCallCheck(this, PagerListItem);

    return _possibleConstructorReturn(this, _getPrototypeOf(PagerListItem).apply(this, arguments));
  }

  _createClass(PagerListItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          selected = _this$props.selected,
          currentPage = _this$props.currentPage;
      var classes = (0, _classnames3.default)('bx--pager__page-item', {
        'bx--pager-item--selected': selected
      });
      return _react.default.createElement("button", {
        onKeyUp: this.props.onKeyUp,
        onClick: this.props.onClick,
        onKeyDown: function onKeyDown(e) {
          e.key === 'Enter' ? e.preventDefault() : '';
        },
        className: classes,
        type: "button",
        ref: this.props.id
      }, currentPage);
    }
  }]);

  return PagerListItem;
}(_react.Component);

_defineProperty(PagerListItem, "propTypes", {
  onClick: _propTypes.default.func,
  onKeyUp: _propTypes.default.func,
  currentPage: _propTypes.default.number,
  selected: _propTypes.default.bool,
  id: _propTypes.default.func
});

var Pager =
/*#__PURE__*/
function (_Component2) {
  _inherits(Pager, _Component2);

  function Pager(props) {
    var _this;

    _classCallCheck(this, Pager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pager).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updatePageQueue", function () {
      var _this$state = _this.state,
          truncate = _this$state.truncate,
          activePage = _this$state.activePage;
      var pageFocus = "pager-".concat(activePage);
      var maxQueuePages = 3;
      if (!truncate) return;

      if (activePage <= maxQueuePages) {
        _this.setState({
          activeQueue: _this.state.leftPageQueue,
          showLower: true,
          showCenter: false,
          showHigher: false
        }, function () {
          _this[pageFocus].focus();
        });
      } else if (activePage >= _this.props.totalItems - maxQueuePages + 1) {
        _this.setState({
          activeQueue: _this.state.rightPageQueue,
          showLower: false,
          showCenter: false,
          showHigher: true
        }, function () {
          _this[pageFocus].focus();
        });
      } else {
        _this.setState({
          showLower: false,
          showCenter: true,
          showHigher: false
        }, function () {
          _this[pageFocus].focus();
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onKeyUp", function (e) {
      e.preventDefault();
      e.stopPropagation();

      switch (e.key) {
        case 'ArrowLeft':
          _this.decrementPage();

          break;

        case 'ArrowRight':
          _this.incrementPage();

          break;

        case 'Enter':
          _this.handlePageChange(_this.state.activePage);

          break;

        default:
          return;
      }

      _this.props.onKeyUp();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "incrementPage", function () {
      var page = _this.state.activePage + 1;

      if (page && page <= _this.props.totalItems) {
        _this.handlePageChange(page);
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "decrementPage", function () {
      var page = _this.state.activePage - 1;

      if (page && page <= _this.props.totalItems) {
        _this.handlePageChange(page);
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handlePageChange", function (page) {
      _this.setState({
        activePage: page,
        selected: page
      }, function () {
        _this.updatePageQueue();
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleClick", function (e) {
      var page = Number(e.target.innerHTML);

      _this.handlePageChange(page);

      _this.props.onClick({
        page: page
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "buildTooltip", function (iconInfo) {
      return _react.default.createElement(_index.TooltipHover, {
        text: iconInfo.description,
        iconName: iconInfo.name,
        className: "bx--pager__button-icon"
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setButtonClassNames", function (type) {
      return (0, _classnames3.default)(_defineProperty({
        'bx--btn': true,
        'bx--btn--secondary': true,
        'bx--pager__button': true
      }, "bx--pager__button--".concat(type), true));
    });

    var _this$props2 = _this.props,
        totalItems = _this$props2.totalItems,
        initialPage = _this$props2.initialPage;
    var lower = [2, 3];
    var higher = [totalItems - 2, totalItems - 1];
    var pagesArr = Array.from(new Array(totalItems), function (val, index) {
      return index + 1;
    });
    var maxDisplayPages = 5;
    var _maxQueuePages = 3;
    _this.state = {
      activePage: initialPage,
      leftPageQueue: lower,
      rightPageQueue: higher,
      activeQueue: totalItems <= maxDisplayPages ? pagesArr : lower,
      truncate: totalItems > maxDisplayPages,
      showLower: initialPage < _maxQueuePages,
      showCenter: initialPage > _maxQueuePages,
      showHigher: initialPage >= totalItems - 2
    };
    return _this;
  }

  _createClass(Pager, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          className = _this$props3.className,
          totalItems = _this$props3.totalItems,
          backwardText = _this$props3.backwardText,
          forwardText = _this$props3.forwardText,
          rest = _objectWithoutProperties(_this$props3, ["className", "totalItems", "backwardText", "forwardText"]);

      var _this$state2 = this.state,
          activePage = _this$state2.activePage,
          activeQueue = _this$state2.activeQueue,
          truncate = _this$state2.truncate,
          showLower = _this$state2.showLower,
          showCenter = _this$state2.showCenter,
          showHigher = _this$state2.showHigher;
      var classNames = (0, _classnames3.default)(_defineProperty({
        'bx--pager': true
      }, className, className));
      var backwardIcon = {
        name: 'left',
        description: backwardText
      };
      var forwardIcon = {
        name: 'right',
        description: forwardText
      };

      var ellipsis = _react.default.createElement("span", {
        className: "bx--pager-ellipsis"
      }, "...");

      var pageQueue = activeQueue.map(function (page) {
        return _react.default.createElement("li", {
          key: "pager-".concat(page),
          index: page
        }, _react.default.createElement(PagerListItem, {
          label: page.toString(),
          onClick: _this2.handleClick.bind(_this2),
          onKeyUp: _this2.onKeyUp.bind(_this2),
          selected: activePage === page,
          currentPage: page,
          id: function id(button) {
            _this2["pager-".concat(page)] = button;
          }
        }));
      });
      return _react.default.createElement("div", _extends({
        className: classNames
      }, rest), activePage > 1 && _react.default.createElement("div", {
        className: "bx--pager__left"
      }, _react.default.createElement("button", {
        className: this.setButtonClassNames('backward'),
        onClick: this.decrementPage
      }, this.buildTooltip(backwardIcon))), _react.default.createElement("div", {
        className: "bx--pager__center"
      }, !truncate && _react.default.createElement("ul", {
        className: "bx--pager__page-list"
      }, pageQueue), truncate && _react.default.createElement("ul", {
        className: "bx--pager__page-list"
      }, _react.default.createElement("li", {
        key: 'pager-1',
        index: 1
      }, _react.default.createElement(PagerListItem, {
        onClick: this.handleClick.bind(this),
        onKeyUp: this.onKeyUp.bind(this),
        selected: activePage === 1,
        currentPage: 1,
        id: function id(button) {
          _this2["pager-1"] = button;
        }
      })), showLower && pageQueue, (showLower || showCenter) && ellipsis, showCenter && activePage !== totalItems && activePage !== 1 && _react.default.createElement("li", {
        key: "pager-".concat(activePage),
        index: activePage
      }, _react.default.createElement(PagerListItem, {
        onClick: this.handleClick.bind(this),
        onKeyUp: this.onKeyUp.bind(this),
        selected: true,
        currentPage: activePage,
        id: function id(button) {
          _this2["pager-".concat(activePage)] = button;
        }
      })), (showHigher || showCenter) && ellipsis, showHigher && pageQueue, _react.default.createElement("li", {
        key: "pager-".concat(totalItems),
        index: totalItems
      }, _react.default.createElement(PagerListItem, {
        onClick: this.handleClick.bind(this),
        onKeyUp: this.onKeyUp.bind(this),
        selected: activePage === totalItems,
        currentPage: totalItems,
        id: function id(button) {
          _this2["pager-".concat(totalItems)] = button;
        }
      })))), activePage < totalItems && _react.default.createElement("div", {
        className: "bx--pager__right"
      }, _react.default.createElement("button", {
        className: this.setButtonClassNames('forward'),
        onClick: this.incrementPage
      }, this.buildTooltip(forwardIcon))));
    }
  }]);

  return Pager;
}(_react.Component);

exports.default = Pager;

_defineProperty(Pager, "propTypes", {
  className: _propTypes.default.string,
  initialPage: _propTypes.default.number,
  totalItems: _propTypes.default.number,
  onClick: _propTypes.default.func,
  onKeyUp: _propTypes.default.func,
  backwardText: _propTypes.default.string,
  forwardText: _propTypes.default.string
});

_defineProperty(Pager, "defaultProps", {
  onClick: function onClick() {},
  onKeyUp: function onKeyUp() {},
  initialPage: 1,
  backwardText: 'previous page',
  forwardText: 'next page'
});