"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonActions = require("@storybook/addon-actions");

var _addonInfo = require("@storybook/addon-info");

var _index = require("../../index");

var _storybookReadme = require("storybook-readme");

var _README = _interopRequireDefault(require("./README.md"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TagUpdate =
/*#__PURE__*/
function (_React$Component) {
  _inherits(TagUpdate, _React$Component);

  function TagUpdate(props) {
    var _this;

    _classCallCheck(this, TagUpdate);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(TagUpdate).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "tagClick", function () {
      _this.setState({
        action: 'success',
        count: 15
      });
    });

    _this.state = {
      action: 'emoji',
      count: 14
    };
    return _this;
  }

  _createClass(TagUpdate, [{
    key: "render",
    value: function render() {
      return _react.default.createElement(_index.TagWrapper, {
        light: true,
        "aria-label": "Tags"
      }, _react.default.createElement(_index.Tag, {
        action: this.state.action,
        actionFunction: this.tagClick,
        actionDescription: "Add a point"
      }, "Offering Managment \xB7 ", this.state.count));
    }
  }]);

  return TagUpdate;
}(_react.default.Component);

var actionTagProps = {
  className: 'some-class',
  onClick: (0, _addonActions.action)('onClick'),
  onBlur: (0, _addonActions.action)('onBlur'),
  onFocus: (0, _addonActions.action)('onFocus'),
  onKeyUp: (0, _addonActions.action)('onKeyUp'),
  onKeyDown: (0, _addonActions.action)('onKeyDown'),
  actionDescription: 'Enter an icon description'
};
(0, _react2.storiesOf)('Components|Tag', module).addDecorator((0, _storybookReadme.withReadme)(_README.default)).add('default', (0, _addonInfo.withInfo)("\n        This example below shows how the Tag\n        component can be used. Notice dark is used in this case since it's on a\n        light background. To use multiple tags use the TagWrapper component.\n      ")(function () {
  return _react.default.createElement(_index.TagWrapper, {
    light: true,
    "aria-label": "Tags"
  }, _react.default.createElement(_index.Tag, {
    className: "some-class"
  }, "Offering Managment \xB7 72"), _react.default.createElement(_index.Tag, {
    className: "some-class"
  }, "Development \xB7 63"), _react.default.createElement(_index.Tag, {
    className: "some-class"
  }, "RTP \xB7 51"), _react.default.createElement(_index.Tag, {
    className: "some-class"
  }, "Littleton \xB7 33"), _react.default.createElement(_index.Tag, {
    className: "some-class"
  }, "Dublin \xB7 12"));
})).add('remove', (0, _addonInfo.withInfo)("\n        This shows how the Tag component can be used with a remove option.\n      ")(function () {
  return _react.default.createElement(_index.TagWrapper, {
    light: true,
    "aria-label": "Tags"
  }, _react.default.createElement(_index.Tag, {
    remove: true,
    className: "some-class"
  }, "Offering Managment"), _react.default.createElement(_index.Tag, {
    remove: true,
    className: "some-class"
  }, "Development"), _react.default.createElement(_index.Tag, {
    remove: true,
    className: "some-class"
  }, "RTP"), _react.default.createElement(_index.Tag, {
    remove: true,
    className: "some-class"
  }, "Littleton"), _react.default.createElement(_index.Tag, {
    remove: true,
    className: "some-class"
  }, "Dublin"));
})).add('with action', (0, _addonInfo.withInfo)("\n        The example below shows how the Tag component can be used with left side action icons.\n        Actions include add, success and remove.\n      ")(function () {
  return _react.default.createElement(_index.TagWrapper, {
    light: true,
    "aria-label": "Tags"
  }, _react.default.createElement(_index.Tag, _extends({
    action: 'add'
  }, actionTagProps), "Offering Managment"), _react.default.createElement(_index.Tag, _extends({
    action: 'success'
  }, actionTagProps), "Development"), _react.default.createElement(_index.Tag, _extends({
    action: 'remove'
  }, actionTagProps), "Design"));
})).add('with action function', (0, _addonInfo.withInfo)("\n        The example below shows how the Tag component can be used with left side action icons.\n        Actions include add, success and remove.\n      ")(function () {
  return _react.default.createElement(TagUpdate, null);
})).add('light', (0, _addonInfo.withInfo)("\n        The example below shows how the Tag component can be used on a dark background.\n      ")(function () {
  return _react.default.createElement(_index.TagWrapper, {
    "aria-label": "Tags"
  }, _react.default.createElement(_index.Tag, {
    style: 'light',
    className: "some-class"
  }, "Offering Managment \xB7 72"), _react.default.createElement(_index.Tag, {
    style: 'light',
    remove: true,
    className: "some-class"
  }, "Development"), _react.default.createElement(_index.Tag, {
    style: 'light',
    action: 'remove',
    actionDescription: 'Remove this tag',
    className: "some-class"
  }, "Design"));
}));