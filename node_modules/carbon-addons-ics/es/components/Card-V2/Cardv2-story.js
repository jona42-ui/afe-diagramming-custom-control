"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonInfo = require("@storybook/addon-info");

var _storybookReadme = require("storybook-readme");

var _README = _interopRequireDefault(require("./README.md"));

var _index = require("../../index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var CardMeta = _index.Cardv2.CardMeta,
    CardText = _index.Cardv2.CardText,
    CardMedia = _index.Cardv2.CardMedia;
var cardProps = {
  onClick: function onClick() {
    console.log('click'); // eslint-disable-line no-console
  },
  onFocus: function onFocus() {
    console.log('focus'); // eslint-disable-line no-console
  },
  className: 'some-class'
};
var timestamp = new Date(Date.now());
var cardMetaProps = {
  metaPrimary: 'Card Title',
  metaSecondary: timestamp.toLocaleTimeString(),
  className: 'some-class'
};
var mediaSrc = 'https://www.ibm.com/images/portal/U348822E90543V80/cognitive-bg-1600x900-1.jpg';
var mediaAlt = 'example image';
(0, _react2.storiesOf)('Components|Card-V2', module).addDecorator((0, _storybookReadme.withReadme)(_README.default)).addDecorator(function (story) {
  return _react.default.createElement("div", {
    className: "bx--col-sm-6 bx--col-lg-3"
  }, story());
}).add('default', (0, _addonInfo.withInfo)("\n      This card is an example of how a card might appear but can be updated and\n      modified to display any data that is needed within the context of your product.\n      This example uses CardMeta and CardText components.\n    ")(function () {
  return _react.default.createElement(_index.Cardv2, cardProps, _react.default.createElement(CardMeta, cardMetaProps), _react.default.createElement(CardText, {
    className: "some-class"
  }, _react.default.createElement("p", null, "This card is an example of how a card might appear but can be updated and modified to display any data that is needed within the context of your product.")));
})).add('Media Card', (0, _addonInfo.withInfo)("\n      Media Cards provide an at-a glance preview of media content. The example\n      below uses the CardMedia and CardMeta component. The CardMeta has metaPadding\n      prop that provides 16px padding when used above or below a CardMedia component.\n    ")(function () {
  return _react.default.createElement(_index.Cardv2, cardProps, _react.default.createElement(CardMedia, {
    className: "some-class",
    type: "img",
    src: mediaSrc,
    altText: mediaAlt
  }), _react.default.createElement(CardMeta, _extends({}, cardMetaProps, {
    metaPadding: true
  })));
})).add('Media and Text Card', (0, _addonInfo.withInfo)("\n        CardMedia, CardText and CardMeta can be combined in any combination.\n      ")(function () {
  return _react.default.createElement("div", null, _react.default.createElement(_index.Cardv2, cardProps, _react.default.createElement(CardMeta, cardMetaProps), _react.default.createElement(CardText, {
    className: "some-class"
  }, _react.default.createElement("p", null, "This card is an example of how a card might appear but can be updated and modified to display any data that is needed within the context of your product.")), _react.default.createElement(CardMedia, {
    className: "some-class",
    type: "img",
    src: mediaSrc,
    altText: mediaAlt
  })), _react.default.createElement(_index.Cardv2, cardProps, _react.default.createElement(CardMeta, _extends({}, cardMetaProps, {
    metaPadding: true
  })), _react.default.createElement(CardMedia, {
    className: "some-class",
    type: "img",
    src: mediaSrc,
    altText: mediaAlt
  }), _react.default.createElement(CardText, {
    className: "some-class"
  }, _react.default.createElement("p", null, "This card is an example of how a card might appear but can be updated and modified to display any data that is needed within the context of your product."))));
}));