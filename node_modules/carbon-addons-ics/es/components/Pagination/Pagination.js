"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _carbonComponentsReact = require("carbon-components-react");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Pagination =
/*#__PURE__*/
function (_Component) {
  _inherits(Pagination, _Component);

  function Pagination(props) {
    var _this;

    _classCallCheck(this, Pagination);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "incrementPage", function () {
      var page = _this.state.page + 1;

      _this.setState({
        page: page
      });

      var tab = _this["tab".concat(page)];

      tab.tabAnchor.focus();

      _this.props.onChange({
        page: page
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "decrementPage", function () {
      var page = _this.state.page - 1;

      _this.setState({
        page: page
      });

      var tab = _this["tab".concat(page)];

      tab.tabAnchor.focus();

      _this.props.onChange({
        page: page
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handlePageChange", function (page) {
      if (page > 0 && page <= _this.props.totalItems) {
        _this.setState({
          page: page
        });

        _this.props.onChange({
          page: page
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleClick", function (page, label, evt) {
      evt.preventDefault();

      _this.handlePageChange(page);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleTabKeyDown", function (page, label, evt) {
      var key = evt.key || evt.which;

      if (key === 'Enter' || key === 13 || key === ' ' || key === 32) {
        _this.handlePageChange(page);
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getTabAt", function (index) {
      return _this["tab".concat(index)] || _react.default.Children.toArray(_this.props.children)[index];
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleTabAnchorFocus", function (page) {
      var tabCount = _this.props.totalItems;
      var tabIndex = page;

      if (page <= 0) {
        tabIndex = tabCount;
      } else if (page > tabCount) {
        tabIndex = 1;
      }

      var tab = _this.getTabAt(tabIndex);

      if (tab) {
        _this.handlePageChange(tabIndex);

        if (tab.tabAnchor) {
          tab.tabAnchor.focus();
        }
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "renderTabItems", function () {
      var page = 1;
      var tabs = [];

      while (page <= _this.props.totalItems) {
        var selected = _this.state.page === page;
        tabs.push(_react.default.createElement(_carbonComponentsReact.Tab, {
          key: "pagination-tab-".concat(page),
          index: page,
          label: page.toString(),
          handleTabClick: _this.handleClick,
          handleTabKeyDown: _this.handleTabKeyDown,
          handleTabAnchorFocus: _this.handleTabAnchorFocus,
          onFocus: _this.showHint,
          onBlur: _this.hideHint,
          selected: selected,
          ref: function ref(pageTab) {
            pageTab && (_this["tab".concat(pageTab.props.index)] = pageTab);
          }
        }));
        page++;
      }

      return tabs;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "showHint", function () {
      _this.setState({
        hint: true
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "hideHint", function () {
      _this.setState({
        hint: false
      });
    });

    _this.state = {
      page: _this.props.page,
      hint: false
    };
    return _this;
  }

  _createClass(Pagination, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          backwardText = _this$props.backwardText,
          className = _this$props.className,
          forwardText = _this$props.forwardText,
          hintText = _this$props.hintText,
          isLastPage = _this$props.isLastPage,
          totalItems = _this$props.totalItems,
          pageNumber = _this$props.page,
          rest = _objectWithoutProperties(_this$props, ["backwardText", "className", "forwardText", "hintText", "isLastPage", "totalItems", "page"]);

      var statePage = this.state.page;
      var classNames = (0, _classnames2.default)(_defineProperty({
        'bx--pagination': true
      }, className, className));
      var tabItems = this.renderTabItems();
      return _react.default.createElement("div", _extends({
        className: classNames
      }, rest), _react.default.createElement("div", {
        className: "bx--pagination__left"
      }, _react.default.createElement("button", {
        className: "bx--btn bx--btn--secondary",
        onClick: this.decrementPage,
        disabled: this.props.disabled || statePage === 1
      }, backwardText)), _react.default.createElement("div", {
        className: "bx--pagination__center"
      }, _react.default.createElement("nav", {
        className: "bx--tabs"
      }, _react.default.createElement("ul", {
        className: "bx--tabs__nav bx--tabs__nav--hidden",
        role: "tablist"
      }, tabItems)), _react.default.createElement("div", {
        className: "bx--pagination__hint",
        style: {
          opacity: this.state.hint ? 1 : 0
        }
      }, hintText)), _react.default.createElement("div", {
        className: "bx--pagination__right"
      }, _react.default.createElement("button", {
        className: "bx--btn bx--btn--secondary",
        onClick: this.incrementPage,
        disabled: this.props.disabled || statePage === totalItems || isLastPage
      }, forwardText)));
    }
  }]);

  return Pagination;
}(_react.Component);

exports.default = Pagination;

_defineProperty(Pagination, "propTypes", {
  backwardText: _propTypes.default.string,
  className: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  forwardText: _propTypes.default.string,
  hintText: _propTypes.default.string,
  isLastPage: _propTypes.default.bool,
  onChange: _propTypes.default.func,
  page: _propTypes.default.number,
  totalItems: _propTypes.default.number
});

_defineProperty(Pagination, "defaultProps", {
  backwardText: 'Backward',
  disabled: false,
  forwardText: 'Forward',
  hintText: 'Use ← left and right → arrow keys to navigate',
  isLastPage: false,
  onChange: function onChange() {},
  page: 1
});