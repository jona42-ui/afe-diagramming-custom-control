"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonActions = require("@storybook/addon-actions");

var _index = require("../../index");

var _addonInfo = require("@storybook/addon-info");

var _storybookReadme = require("storybook-readme");

var _README = _interopRequireDefault(require("./README.md"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var buttonEvents = {
  onClick: (0, _addonActions.action)('onClick'),
  onFocus: (0, _addonActions.action)('onFocus'),
  className: 'some-class'
};
(0, _react2.storiesOf)('Components|Action Icon', module).addDecorator((0, _storybookReadme.withReadme)(_README.default)).add('default', (0, _addonInfo.withInfo)("")(function () {
  return _react.default.createElement(_index.ActionIcon, _extends({}, buttonEvents, {
    icon: "search",
    className: "some-class",
    iconDescription: "Search this page"
  }));
})).add('selected', (0, _addonInfo.withInfo)("This is an example of an ActionIcon with a selected prop")(function () {
  return _react.default.createElement(_index.ActionIcon, _extends({}, buttonEvents, {
    className: "some-class",
    icon: "grid-view",
    iconDescription: "View page as a grid",
    selected: true
  }));
})).add('disabled', (0, _addonInfo.withInfo)("To disable, use the disabled prop, as seen in this example.")(function () {
  return _react.default.createElement(_index.ActionIcon, _extends({}, buttonEvents, {
    className: "some-class",
    icon: "upload",
    iconDescription: "Upload a profile picture",
    disabled: true
  }));
})).add('small', (0, _addonInfo.withInfo)("\n        Use the small prop to get a small icon, as seen in this example.\n      ")(function () {
  return _react.default.createElement(_index.ActionIcon, _extends({}, buttonEvents, {
    className: "some-class",
    icon: "add",
    iconDescription: "Add a new table row",
    small: true
  }));
})).add('small selected', (0, _addonInfo.withInfo)("\n        This is an example of a small, selected ActionIcon.\n      ")(function () {
  return _react.default.createElement(_index.ActionIcon, _extends({}, buttonEvents, {
    className: "some-class",
    icon: "tag",
    iconDescription: "View document tags",
    small: true,
    selected: true
  }));
}));