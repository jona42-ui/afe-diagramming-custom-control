"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonActions = require("@storybook/addon-actions");

var _addonInfo = require("@storybook/addon-info");

var _index = require("../../index");

var _storybookReadme = require("storybook-readme");

var _README = _interopRequireDefault(require("./README.md"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var modalProps = {
  onBlur: (0, _addonActions.action)('onBlur'),
  onClick: (0, _addonActions.action)('onClick'),
  onFocus: (0, _addonActions.action)('onFocus'),
  className: 'some-class'
};
(0, _react2.storiesOf)('Components|Modal', module).addDecorator((0, _storybookReadme.withReadme)(_README.default)).add('transactional', (0, _addonInfo.withInfo)("")(function () {
  return _react.default.createElement(_index.Modal, _extends({}, modalProps, {
    open: true,
    modalHeading: "Dialog Example",
    primaryButtonText: "Primary Button",
    secondaryButtonText: "Secondary Button"
  }), _react.default.createElement("p", {
    className: "bx--modal-content__text"
  }, "Please see ModalWrapper for more examples and demo of the functionality."));
})).add('passive', (0, _addonInfo.withInfo)("\n      Passive modals are modals without footers. Add passiveModal prop or set to true to render passive modal.\n    ")(function () {
  return _react.default.createElement(_index.Modal, _extends({}, modalProps, {
    open: true,
    passiveModal: true,
    modalHeading: "Dialog Example",
    primaryButtonText: "Primary Button",
    secondaryButtonText: "Secondary Button"
  }), _react.default.createElement("p", {
    className: "bx--modal-content__text"
  }, "Please see ModalWrapper for more examples and demo of the functionality."));
}));