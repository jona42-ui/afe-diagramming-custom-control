"use strict";

var _react = _interopRequireDefault(require("react"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _TooltipHover = _interopRequireDefault(require("../TooltipHover"));

var _enzyme = require("enzyme");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Tooltip', function () {
  describe('Renders as expected with defaults', function () {
    var outerWrapper = (0, _enzyme.mount)(_react.default.createElement(_TooltipHover.default, {
      text: "Tooltip",
      iconName: "warning"
    }));
    var innerWrapper = outerWrapper.find('.bx--tooltip--simple');
    describe('tooltip innerWrapper', function () {
      it('renders a tooltip container', function () {
        expect(innerWrapper.length).toEqual(1);
      });
      it('renders with icon', function () {
        var icon = innerWrapper.find(_Icon.default);
        expect(icon.length).toBe(1);
        expect(icon.props().name).toBe('warning');
      });
    });
  });
  describe('Renders as expected with specified properties', function () {
    var outerWrapper = (0, _enzyme.mount)(_react.default.createElement(_TooltipHover.default, {
      text: "data-text",
      iconName: "warning",
      position: "top"
    }));
    describe('tooltip container', function () {
      it("sets the tooltip's data-tooltip-text attribute", function () {
        expect(outerWrapper.prop('text')).toEqual('data-text');
      });
      it("sets the tooltip's position", function () {
        expect(outerWrapper.prop('position')).toEqual('top');
      });
    });
  });
});