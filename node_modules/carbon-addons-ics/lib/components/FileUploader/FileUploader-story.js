"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonInfo = require("@storybook/addon-info");

var _carbonComponentsReact = require("carbon-components-react");

var _index = require("../../index");

var _storybookReadme = require("storybook-readme");

var _README = _interopRequireDefault(require("./README.md"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tooltipProps = {
  text: 'only .jpg files at 500mb or less',
  iconName: 'info'
};
(0, _react2.storiesOf)('Components|FileUploader', module).addDecorator((0, _storybookReadme.withReadme)(_README.default)).add('FileUploaderButton', (0, _addonInfo.withInfo)("\n      The FileUploaderButton can be used as a standalone component if you do not need the extra UI that comes with FileUploader. The FileUploaderButton is used in FileUploader.\n    ")(function () {
  return _react.default.createElement(_carbonComponentsReact.FileUploaderButton, {
    labelText: "Add files",
    className: "bob",
    onChange: function onChange() {},
    buttonKind: "secondary",
    multiple: true
  });
})).add('FileUploader', (0, _addonInfo.withInfo)("\n      The FileUploader components allow the user to upload any necessary files. This uses the FileUploaderButton and Filename components. Filename components will appear below the FileUploaderButton when files are added. Use the filenameStatus prop to control what icon appears in Filename ('edit', 'complete', or 'uploading').\n    ")(function () {
  return _react.default.createElement(_index.FileUploader, {
    labelTitle: "Upload",
    labelDescription: "only .jpg files at 500mb or less",
    buttonLabel: "Add files",
    filenameStatus: "edit",
    buttonKind: "secondary",
    multiple: true
  });
})).add('FileUploader with Tooltip', (0, _addonInfo.withInfo)("\n      The FileUploader components allow the user to upload any necessary files. This uses the FileUploaderButton and Filename components. Filename components will appear below the FileUploaderButton when files are added. Use the filenameStatus prop to control what icon appears in Filename ('edit', 'complete', or 'uploading').\n    ")(function () {
  return _react.default.createElement(_index.FileUploader, {
    labelTitle: "Upload a file",
    labelDescription: "Choose a file to upload",
    labelTooltip: tooltipProps,
    buttonLabel: "Add files",
    filenameStatus: "edit",
    buttonKind: "secondary",
    multiple: true
  });
}));