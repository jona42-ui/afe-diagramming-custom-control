$base-font-size: 16px !default; // Default, Use with em() and rem() functions
@import 'carbon-components/scss/globals/scss/import-once';

$ics-type-prescription-map: (
  'h': (
    font-size: 2.25rem,
    line-height: 2.75rem,
    font-weight: 300,
    max-width: 50.5rem,
    margin-bottom: 2rem,
  ),
  'g': (
    font-size: 1.75rem,
    line-height: 2.25rem,
    font-weight: 400,
    max-width: 43rem,
    margin-bottom: 1.5rem,
  ),
  'e': (
    font-size: 1.25rem,
    line-height: 1.625rem,
    font-weight: 400,
    max-width: 37.5rem,
    margin-bottom: 1.5rem,
  ),
  'd': (
    font-size: 1rem,
    line-height: 1.375rem,
    font-weight: 600,
    max-width: 35rem,
    margin-bottom: 1.5rem,
  ),
  'c': (
    font-size: 1rem,
    line-height: 1.5rem,
    font-weight: 400,
    max-width: 35rem,
    margin-bottom: 1.5rem,
  ),
  'b': (
    font-size: 0.875rem,
    line-height: 1.25rem,
    font-weight: 400,
    max-width: 30rem,
    letter-spacing: 0.01rem,
    margin-bottom: 1rem,
  ),
  'a': (
    font-size: 0.75rem,
    line-height: 1rem,
    font-weight: 400,
    max-width: 26.5rem,
    letter-spacing: 0.02rem,
    margin-bottom: 1rem,
  ),
);
@mixin disable-font-smoothing {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: auto;
}
@function rem($px) {
  @return ($px / $base-font-size) * 1rem;
}
@mixin type-scale-item($prescription, $margin: true, $max-width: false) {
  $step: map-get($ics-type-prescription-map, $prescription);
  @include disable-font-smoothing;
  font-size: map-get($step, 'font-size');
  font-weight: map-get($step, 'font-weight');
  line-height: map-get($step, 'line-height');
  letter-spacing: map-get($step, 'letter-spacing');
  @if $margin == true {
    margin-bottom: map-get($step, 'margin-bottom');
  }
  @if $max-width == true {
    max-width: map-get($step, 'max-width');
  }
}
@mixin ics-typography {
  strong {
    font-weight: 600;
  }
  p {
    @include type-scale-item(c, true, true);
    a:hover {
      text-decoration: underline;
    }
  }
  em {
    font-style: italic;
  }
  a {
    color: $brand-01;
    word-break: break-all;
    text-decoration: none;
  }
  h1,
  .ibm-type-h {
    @include type-scale-item(h, true, true);
  }
  h2,
  .ibm-type-g {
    @include type-scale-item(g, true, true);
  }
  h3,
  .ibm-type-e {
    @include type-scale-item(e, true, true);
  }
  h4,
  .ibm-type-d {
    @include type-scale-item(d, true, true);
  }
  .ibm-type-c {
    @include type-scale-item(c, true, true);
  }
  caption,
  .ibm-type-b {
    @include type-scale-item(b, true, true);
  }
  .ibm-type-a {
    @include type-scale-item(a, true, true);
  }
}
@include exports('ics--typography') {
  @if global-variable-exists('ics--typography') ==
    false or
    $ics--typography ==
    true
  {
    @include ics-typography;
  }
}
