"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const pluginutils_1 = require("@rollup/pluginutils");
const transformAst = require("transform-ast");
const escape = (str) => str
    .replace(/`/g, '\\`')
    .replace(/\\(?!`)/g, '\\\\');
function postcssLit(options = {
    include: '**/*.{css,sss,pcss,styl,stylus,sass,scss,less}',
    exclude: null,
}) {
    const filter = pluginutils_1.createFilter(options.include, options.exclude);
    return {
        name: 'postcss-lit',
        transform(code, id) {
            if (!filter(id))
                return;
            const ast = this.parse(code, {});
            let defaultExportName;
            const magicString = transformAst(code, { ast: ast }, node => {
                if (node.type === 'ExportDefaultDeclaration') {
                    defaultExportName = node.declaration.name;
                }
            });
            if (!defaultExportName) {
                return;
            }
            magicString.walk(node => {
                if (node.type === 'VariableDeclaration') {
                    const exportedVar = node.declarations.find(d => d.id.name === defaultExportName);
                    if (exportedVar) {
                        exportedVar.init.edit.update(`cssTag\`${escape(exportedVar.init.value)}\``);
                    }
                }
            });
            magicString.prepend('import {css as cssTag} from \'lit-element\';\n');
            return {
                code: magicString.toString(),
                map: magicString.generateMap({
                    hires: true,
                }),
            };
        },
    };
}
exports.default = postcssLit;
;
//# sourceMappingURL=index.js.map